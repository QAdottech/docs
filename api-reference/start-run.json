{
  "openapi": "3.0.0",
  "info": {
    "title": "QA.tech API",
    "description": "API for managing project runs and test executions",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.qa.tech/api"
    }
  ],
  "paths": {
    "/projects/{projectId}/runs": {
      "post": {
        "summary": "Start the tests",
        "description": "This endpoint triggers a new test run for the specified project.",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the project"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "application/json"
            },
            "description": "The media type of the request body. Should be set to application/json"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "integrationName": {
                    "type": "string",
                    "example": "CircleCI",
                    "default": "API",
                    "description": "Human readable name of what triggered this test, can be the name of the CI/CD tool. Defaults to 'API' if not provided."
                  },
                  "testPlanShortId": {
                    "type": "string",
                    "example": "abc123",
                    "description": "The short ID of the test plan to run"
                  },
                  "applications": {
                    "type": "object",
                    "description": "Optional application environment overrides for testing specific environments",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "environment": {
                          "type": "object",
                          "properties": {
                            "short_id": {
                              "type": "string",
                              "description": "Existing environment short ID to use instead of creating new one"
                            },
                            "url": {
                              "type": "string",
                              "example": "https://preview-123.vercel.app",
                              "description": "The URL of the environment to test against"
                            },
                            "name": {
                              "type": "string",
                              "example": "Preview Environment",
                              "description": "Human readable name for the environment"
                            }
                          },
                          "description": "Environment configuration for the application. Either short_id or url+name must be provided."
                        }
                      },
                      "required": ["environment"]
                    },
                    "example": {
                      "app-short-id-1": {
                        "environment": {
                          "url": "https://preview-123-frontend.vercel.app",
                          "name": "PR-123-Frontend"
                        }
                      },
                      "app-short-id-2": {
                        "environment": {
                          "short_id": "existing-env-123"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "basic": {
                  "summary": "Basic test run",
                  "value": {
                    "testPlanShortId": "abc123"
                  }
                },
                "preview-environments": {
                  "summary": "Test run with preview environment overrides",
                  "value": {
                    "testPlanShortId": "abc123",
                    "integrationName": "CI/CD Pipeline",
                    "applications": {
                      "frontend-app": {
                        "environment": {
                          "url": "https://pr-123-frontend.vercel.app",
                          "name": "PR-123-Frontend"
                        }
                      },
                      "backend-api": {
                        "environment": {
                          "short_id": "existing-env-456"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created run",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true,
                      "description": "Indicates if the request was successful"
                    },
                    "run": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "run_abc123def456",
                          "description": "The unique identifier of the created run"
                        },
                        "shortId": {
                          "type": "string",
                          "example": "abc123",
                          "description": "The short identifier of the run"
                        },
                        "url": {
                          "type": "string",
                          "example": "https://app.qa.tech/projects/project-123/results/abc123",
                          "description": "The URL to view the test results"
                        },
                        "testCount": {
                          "type": "integer",
                          "example": 5,
                          "description": "The number of tests in this run"
                        },
                        "testPlan": {
                          "type": "object",
                          "description": "The test plan that was executed"
                        }
                      },
                      "required": ["id", "shortId", "url", "testCount"]
                    }
                  },
                  "required": ["success", "run"]
                },
                "example": {
                  "success": true,
                  "run": {
                    "id": "run_abc123def456",
                    "shortId": "abc123",
                    "url": "https://app.qa.tech/projects/project-123/results/abc123",
                    "testCount": 5,
                    "testPlan": {
                      "id": "plan_xyz789",
                      "name": "API Integration Tests"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters or malformed request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid test plan ID or malformed applications config"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid API token"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required - organization has reached usage limit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Organization has reached usage limit. Upgrade your account to continue."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - organization is suspended or access denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Organization is suspended"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Project not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "API Error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
